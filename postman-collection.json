{
  "info": {
    "_postman_id": "joinup-backend-collection",
    "name": "JoinUp Backend API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Google Login",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/auth/google?code={{google_auth_code}}",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "google"],
              "query": [
                {
                  "key": "code",
                  "value": "{{google_auth_code}}"
                }
              ]
            },
            "description": "OAuth2 Google login with 'postmessage' redirect method. The code parameter is obtained from the Google Auth response."
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            }
          }
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/auth/email/verify/:code",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "email", "verify", ":code"]
            }
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/password/forgot",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "password", "forgot"]
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"newpassword123\",\n  \"code\": \"verification-code\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/password/reset",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "password", "reset"]
            }
          }
        }
      ]
    },
    {
      "name": "user",
      "item": [
        {
          "name": "Get User",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/user/",
              "host": ["{{baseUrl}}"],
              "path": ["user"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"new@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/user/",
              "host": ["{{baseUrl}}"],
              "path": ["user"]
            }
          }
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/user/profile",
              "host": ["{{baseUrl}}"],
              "path": ["user", "profile"]
            },
            "description": "Get user profile with associated social links"
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New Name\",\n  \"phoneNumber\": \"+1234567890\",\n  \"gender\": \"Male\",\n  \"profession\": \"Professional\",\n  \"jobTitle\": \"Developer\",\n  \"place\": \"Remote\",\n  \"bio\": \"Full-stack developer with 5 years experience\",\n  \"socialLinks\": [\n    {\n      \"type\": \"LinkedIn\",\n      \"link\": \"https://linkedin.com/in/username\",\n      \"isVisible\": true\n    },\n    {\n      \"type\": \"GitHub\",\n      \"link\": \"https://github.com/username\",\n      \"isVisible\": true\n    },\n    {\n      \"type\": \"Twitter\",\n      \"link\": \"https://twitter.com/username\",\n      \"isVisible\": false\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/user/profile",
              "host": ["{{baseUrl}}"],
              "path": ["user", "profile"]
            },
            "description": "Update user profile with name, contact info, and social links"
          }
        }
      ]
    },
    {
      "name": "session",
      "item": [
        {
          "name": "Get Sessions",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/session/",
              "host": ["{{baseUrl}}"],
              "path": ["session"]
            }
          }
        },
        {
          "name": "Delete Session",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/session/:id",
              "host": ["{{baseUrl}}"],
              "path": ["session", ":id"]
            }
          }
        }
      ]
    },
    {
      "name": "event",
      "item": [
        {
          "name": "Get Events by Category",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/event?profession=Design&location=Online&eventType=Meetup",
              "host": ["{{baseUrl}}"],
              "path": ["event"],
              "query": [
                {
                  "key": "profession",
                  "value": "Design",
                  "description": "EventCategory enum value: Design, Development, or Founders"
                },
                {
                  "key": "location",
                  "value": "Online",
                  "description": "LocationType enum value: Online or Physical"
                },
                {
                  "key": "eventType",
                  "value": "Meetup",
                  "description": "EventType enum value: Meetup, Conference, Workshop, Hackathon, or CoWorking"
                }
              ]
            },
            "description": "Get events with required filters for category (profession), location, and event type"
          }
        },
        {
          "name": "Create Event (Multipart Form)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "eventData",
                  "value": "{\n  \"name\": \"Design Meetup 2025\",\n  \"description\": \"A meetup for designers to network and learn from each other\",\n  \"type\": \"Meetup\",\n  \"category\": \"Design\",\n  \"startTime\": \"2025-06-15T10:00:00Z\",\n  \"duration\": 3,\n  \"location\": \"Online\",\n  \"completeAddress\": \"https://zoom.us/j/123456789\",\n  \"isPaid\": false,\n  \"seats\": 100,\n  \"ticketPrice\": [0],\n  \"hosts\": [\n    {\n      \"name\": \"John Doe\",\n      \"profession\": \"Professional\",\n      \"linkedin\": \"https://linkedin.com/in/johndoe\",\n      \"twitter\": \"https://twitter.com/johndoe\"\n    }\n  ],\n  \"guests\": [\n    {\n      \"name\": \"Jane Smith\",\n      \"profession\": \"Professional\",\n      \"linkedin\": \"https://linkedin.com/in/janesmith\",\n      \"twitter\": \"https://twitter.com/janesmith\"\n    }\n  ]\n}",
                  "type": "text"
                },
                {
                  "key": "poster",
                  "type": "file",
                  "src": "/path/to/your/poster-image.jpg",
                  "description": "Event poster image (JPG/PNG)"
                },
                {
                  "key": "hostAvatars",
                  "type": "file",
                  "src": "/path/to/your/host-avatar.jpg",
                  "description": "Avatar for the first host"
                },
                {
                  "key": "guestAvatars",
                  "type": "file",
                  "src": "/path/to/your/guest-avatar.jpg",
                  "description": "Avatar for the first guest"
                }
              ],
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/event",
              "host": ["{{baseUrl}}"],
              "path": ["event"]
            },
            "description": "Create a new event with multipart form data including images (requires authentication)"
          }
        },
        {
          "name": "Get Event by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/event/:id",
              "host": ["{{baseUrl}}"],
              "path": ["event", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-uuid-here",
                  "description": "Event ID (UUID)"
                }
              ]
            },
            "description": "Get a specific event by its ID with hosts, guests, and pre-signed image URLs"
          }
        },
        {
          "name": "Update Event (JSON)",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Design Meetup 2025\",\n  \"description\": \"Updated description for the design meetup\",\n  \"startTime\": \"2025-06-15T11:00:00Z\",\n  \"hosts\": [\n    {\n      \"id\": \"existing-host-id-here\",\n      \"name\": \"Updated John Doe\",\n      \"profession\": \"Professional\",\n      \"linkedin\": \"https://linkedin.com/in/johndoe-updated\"\n    },\n    {\n      \"name\": \"New Host\",\n      \"profession\": \"Professional\",\n      \"linkedin\": \"https://linkedin.com/in/newhost\"\n    }\n  ],\n  \"guests\": [\n    {\n      \"id\": \"existing-guest-id-here\",\n      \"name\": \"Updated Jane Smith\",\n      \"profession\": \"Professional\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/event/:id",
              "host": ["{{baseUrl}}"],
              "path": ["event", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-uuid-here",
                  "description": "Event ID (UUID)"
                }
              ]
            },
            "description": "Update an existing event with JSON data (requires authentication and ownership). Include IDs for existing hosts/guests to update them, or omit IDs to create new ones. Hosts/guests not included will be removed."
          }
        },
        {
          "name": "Update Event (Multipart Form)",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "eventData",
                  "value": "{\n  \"name\": \"Updated Design Meetup 2025\",\n  \"description\": \"Updated description with new images\",\n  \"startTime\": \"2025-06-15T11:00:00Z\",\n  \"hosts\": [\n    {\n      \"id\": \"existing-host-id-here\",\n      \"name\": \"Updated John Doe\",\n      \"profession\": \"Professional\",\n      \"linkedin\": \"https://linkedin.com/in/johndoe-updated\"\n    },\n    {\n      \"name\": \"New Host\",\n      \"profession\": \"Professional\",\n      \"linkedin\": \"https://linkedin.com/in/newhost\"\n    }\n  ],\n  \"guests\": [\n    {\n      \"id\": \"existing-guest-id-here\",\n      \"name\": \"Updated Jane Smith\",\n      \"profession\": \"Professional\"\n    }\n  ]\n}",
                  "type": "text",
                  "description": "JSON string with event fields. Hosts/guests not included will be removed. Use IDs to update existing, omit to create new."
                },
                {
                  "key": "poster",
                  "type": "file",
                  "src": "",
                  "description": "New event poster image (JPG/PNG, optional)"
                },
                {
                  "key": "hostAvatars",
                  "type": "file",
                  "src": "",
                  "description": "Avatar for hosts (optional, can be multiple)"
                },
                {
                  "key": "guestAvatars",
                  "type": "file",
                  "src": "",
                  "description": "Avatar for guests (optional, can be multiple)"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/event/:id",
              "host": ["{{baseUrl}}"],
              "path": ["event", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-uuid-here",
                  "description": "Event ID (UUID)"
                }
              ]
            }
          },
          "description": "Update an existing event with multipart form data. Include 'eventData' as a JSON string. Optionally include 'poster', 'hostAvatars', and 'guestAvatars' files. Hosts/guests not included will be removed. Use IDs to update existing, omit to create new. Requires authentication and event ownership."
        },
        {
          "name": "Delete Event",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/event/:id",
              "host": ["{{baseUrl}}"],
              "path": ["event", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-uuid-here",
                  "description": "Event ID (UUID)"
                }
              ]
            },
            "description": "Delete an event including all associated images and speakers (requires authentication and ownership)"
          }
        },
        {
          "name": "Get All Speakers",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/event/:id/speakers",
              "host": ["{{baseUrl}}"],
              "path": ["event", ":id", "speakers"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-uuid-here",
                  "description": "Event ID (UUID)"
                }
              ]
            },
            "description": "Get all speakers for a specific event with pre-signed avatar URLs"
          }
        },
        {
          "name": "Get Speaker",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/event/:id/speaker/:speakerId",
              "host": ["{{baseUrl}}"],
              "path": ["event", ":id", "speaker", ":speakerId"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-uuid-here",
                  "description": "Event ID (UUID)"
                },
                {
                  "key": "speakerId",
                  "value": "speaker-uuid-here",
                  "description": "Speaker ID (UUID)"
                }
              ]
            },
            "description": "Get a specific speaker by ID with pre-signed avatar URL (requires authentication)"
          }
        },
        {
          "name": "Create Speaker",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "New Speaker",
                  "type": "text"
                },
                {
                  "key": "profession",
                  "value": "Software Engineer",
                  "type": "text"
                },
                {
                  "key": "linkedin",
                  "value": "https://linkedin.com/in/newspeaker",
                  "type": "text"
                },
                {
                  "key": "twitter",
                  "value": "https://twitter.com/newspeaker",
                  "type": "text"
                },
                {
                  "key": "type",
                  "value": "Host",
                  "description": "Must be either 'Host' or 'Guest'",
                  "type": "text"
                },
                {
                  "key": "hostAvatars",
                  "type": "file",
                  "src": "/path/to/your/host-avatar.jpg",
                  "description": "Avatar for Host (use hostAvatars for Host type)"
                },
                {
                  "key": "guestAvatars",
                  "type": "file",
                  "src": "/path/to/your/guest-avatar.jpg",
                  "description": "Avatar for Guest (use guestAvatars for Guest type)"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/event/:id/speaker",
              "host": ["{{baseUrl}}"],
              "path": ["event", ":id", "speaker"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-uuid-here",
                  "description": "Event ID (UUID)"
                }
              ]
            },
            "description": "Create a new speaker for an event with form data including avatar image (requires authentication and event ownership)"
          }
        },
        {
          "name": "Update Speaker",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "Updated Speaker Name",
                  "type": "text"
                },
                {
                  "key": "profession",
                  "value": "Software Architect",
                  "type": "text"
                },
                {
                  "key": "linkedin",
                  "value": "https://linkedin.com/in/updatedspeaker",
                  "type": "text"
                },
                {
                  "key": "twitter",
                  "value": "https://twitter.com/updatedspeaker",
                  "type": "text"
                },
                {
                  "key": "type",
                  "value": "Guest",
                  "description": "Must be either 'Host' or 'Guest' - changing this will update event relationships",
                  "type": "text"
                },
                {
                  "key": "hostAvatars",
                  "type": "file",
                  "src": "/path/to/your/updated-host-avatar.jpg",
                  "description": "New avatar for Host (use hostAvatars for Host type)"
                },
                {
                  "key": "guestAvatars",
                  "type": "file",
                  "src": "/path/to/your/updated-guest-avatar.jpg",
                  "description": "New avatar for Guest (use guestAvatars for Guest type)"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/event/:id/speaker/:speakerId",
              "host": ["{{baseUrl}}"],
              "path": ["event", ":id", "speaker", ":speakerId"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-uuid-here",
                  "description": "Event ID (UUID)"
                },
                {
                  "key": "speakerId",
                  "value": "speaker-uuid-here",
                  "description": "Speaker ID (UUID)"
                }
              ]
            },
            "description": "Update an existing speaker with form data including optional new avatar image (requires authentication and event ownership). If changing type from Host to Guest or vice versa, the event relationships will be updated automatically."
          }
        },
        {
          "name": "Delete Speaker",
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{baseUrl}}/event/:id/speaker/:speakerId",
              "host": ["{{baseUrl}}"],
              "path": ["event", ":id", "speaker", ":speakerId"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-uuid-here",
                  "description": "Event ID (UUID)"
                },
                {
                  "key": "speakerId",
                  "value": "speaker-uuid-here",
                  "description": "Speaker ID (UUID)"
                }
              ]
            },
            "description": "Delete a speaker including avatar and event relationship (requires authentication and event ownership)"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ]
}
